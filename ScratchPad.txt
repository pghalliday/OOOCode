ToDo
----

Implement an eclipse plugin to make TDD in OOOCode easy as pie :)
- fix the container in class and interface wizards
- add more options to wizards to define methods, constructor args and fields
- split unit test wizard from class wizard to enable real test driven development
- implement name refactoring popup
- generate class popup
- generate interface popup
- extract interface popup
- add method popup
- add interface popup
- add field popup
- move templates into eclipse templates

Update the README with usage notes

Automate OOOTests.h generation / Integrate advanced build scripts

Generate a Unit Test DLL and implement a server application in the VSTB to receive the DLL and run tests

Concerns
--------

I don't really need to use interfaces and classes for unit test definitions (could just use function pointers as I have in the past) but it has an elegance... It will also take longer to compile and run though!! Gah!

Cannot copy instances easily. Memcpy will result in interfaces pointing at incorrect instances and all fields will be lost. Do I care?

Don't much like having 3 method calling conventions but i think i can live with it for now

Should do some performance checks as worried about:
- indirection in function calls
- indirection in destroy function
- extra memory used for destroy function entry in object instance
